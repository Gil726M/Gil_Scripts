{\rtf1\ansi\ansicpg1252\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;\f2\froman\fcharset0 Times-Roman;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #
\f1\fs29\fsmilli14667 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Write a bash script that initialize a string with week days names, does the same as the
\f2\fs24 \
\pard\pardeftab720\partightenfactor0

\f1\fs29\fsmilli14667 \cf0 previous weekdays script,
\f2\fs24 \

\f1\fs29\fsmilli14667 but adds (WEEKDAY) or (WEEKEND) near the day name\
\
\pard\pardeftab720\partightenfactor0

\fs26\fsmilli13333 \cf0 \strokec2 #!/bin/bash\
\
# Initialize an array with the names of the weekdays\
declare -a days=("Sunday" "Monday" "Tuesday" "Wednesday" "Thursday" "Friday" "Saturday")\
\
# Iterate over the array\
for day in "$\{days[@]\}"\
do\
# Check if the day is a weekday or a weekend\
if [[ "$day" == "Saturday" ]] || [[ "$day" == "Sunday" ]]; then\
echo "$day (WEEKEND)"\
else\
echo "$day (WEEKDAY)"\
fi\
done
\f2\fs24 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf0 \
}